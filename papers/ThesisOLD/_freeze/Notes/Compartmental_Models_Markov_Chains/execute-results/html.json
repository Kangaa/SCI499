{
  "hash": "9f3ebae47d45629c5d1cebb58261022a",
  "result": {
    "markdown": "# SIS DTMC\n\nThe compartmental model\n\n\n```{mermaid}\nflowchart LR\n    S --> I\n    I --> S\n```\n\n\nCan be described by a Markov chain of a random variable I(t) representing the number of individuals infected at time t.\n\n\n```{dot}\ndigraph {\n    rankdir = \"LR\"\n    0 -> 0\n    1 -> 0\n    1 -> 2\n    2 -> 1\n    2 -> \"...\"\n    \"...\" -> 2\n    \"...\" -> N\n    N -> \"...\"\n}   \n```\n\n\nNote that I(t) = 0 is an absorbing state (i.e. if there are no infectious people they cannot infect anyone). All other states {1,..., N} are transient.\n\nPossible transitions are specified by\n\n$$\np _ {ji} ( \\Delta t ) =\n     \\begin{cases}\n        {\\frac { \\beta i ( N - i ) } { N}} \\Delta t, & {j = i + 1 } \\\\ \n        { \\gamma i \\Delta t}, & { j = i - 1 } \\\\ \n        { 1 - \\bigg[ \\frac { \\beta i (N - i) } { N } +  \\gamma i }\\bigg] \\Delta t, & { j = i } \\\\\n        0, & { j \\neq i +1, i, i-1}\n    \\end{cases}\n$$ {#eq-SIS_DTMC_Trans}\n\nWhich can be simplified to\n\n$$\np _ {ji} ( \\Delta t ) =\n    \\begin{cases}\n        b(i) \\Delta t, & {j = i + 1 } \\\\ \n        d(i) \\Delta t, & { j = i - 1 } \\\\ \n        1 - [ b(i)  + d(i)] \\Delta t, & { j = i } \\\\\n        0, & { j \\neq i +1, i, i-1}\n    \\end{cases}\n$$ {#eq-SIS_DTMC_Trans_BD}\n\nThe probability of being in state $i$ at time $t + \\Delta t$ can be experessed in terms of probabilities at time $t$. $$\np_{i}(t + \\Delta t) =\n    p_{i-1}(t)b(i-1)\\Delta t +\n    p_{i+1}(t)d(i+1)\\Delta t +\n    p_{i}(t)(1- [ b(i)  + d(i)] \\Delta t)\n$$\n\nfor $i = 1,2,..., N$, where $b(i) = \\beta (N-1/N)$, and $d(i)= \\gamma i$\n\nThe transition matrix $P(\\Delta t)$ is given by $$\n\\begin{pmatrix}\n    1 & d(1)\\Delta t & 0 &  \\cdots & 0 & 0 \\\\\n    0  & 1-(b+d)(1)\\Delta t & d(2)\\Delta t &  \\cdots & 0 & 0 \\\\\n    0 & b(1)\\Delta t & 1-(b+d)(1)\\Delta t &  \\cdots & 0 & 0 \\\\\n    0 & 0t & b(1)\\Delta &  \\cdots & 0 & 0 \\\\\n    \\vdots & \\vdots & \\vdots &  \\ddots & \\vdots & \\vdots \\\\\n    0 & 0  & 0 &  \\cdots & d(N-1) \\Delta t & 0 \\\\\n    0 & 0  & 0 &  \\cdots & 1-(b+d)(N-1)\\Delta t & d(N) \\Delta t \\\\\n    0 & 0  & 0 &  \\cdots & b(N-1)\\Delta t & 1- d(N) \\Delta t \\\\\n\\end{pmatrix}\n$$\n\n# SIR DTMC\n\nThe compartmental model\n\n\n```{mermaid}\nflowchart LR\n    S --> I\n    I --> R\n```\n\n\nCan be described by a Markov chain of two independent random variables S(t) and I(t) representing the number of susceptible or individuals infected at time t, respectively (a third RV R(t) denoting the number of recovered individuals is fully determined when the population size is known, i.e. R = N - S - I).\n\n$$\np _ {(s +k, i +j),(s,i)}(\\Delta t) =\n     \\begin{cases}\n        {\\frac { \\beta i s} { N}} \\Delta t, & {(k, j) = (-1, 1) } \\\\ \n        { \\gamma i \\Delta t}, & { (k, j) = (0, -1)  } \\\\ \n        { 1 - \\bigg[ \\frac { \\beta i s } { N } +  \\gamma i }\\bigg] \\Delta t, & { (k, j) = (0, 0)} \\\\\n        0, & {otherwise}\n    \\end{cases}\n$$ {#eq-SIR_DTMC_Trans}\n\n@eq-SIS_DTMC_Trans\n\n\n```{dot}\ndigraph {\n    rankdir = \"TB\"\n\n    \"S = 0 \\n I = 1\" ->    \"S = 0 \\n I = 0\" [color = \"blue\"]\n    \"S = 0 \\n I = 2\" ->    \"S = 0 \\n I = 1\" [color = \"blue\"]\n    \"S = 0 \\n I = ~\" ->    \"S = 0 \\n I = 2\" [color = \"blue\"]\n    \"S = 0 \\n I = N\" ->    \"S = 0 \\n I = N - 1\" [color = \"blue\"]\n    \"S = 0 \\n I = N - 1\" -> \"S = 0 \\n I = N - 2\" [color = \"blue\"]\n    \"S = 0 \\n I = N - 2\" -> \"S = 0 \\n I = ~\" [color = \"blue\"]\n\n    \"S = 1 \\n I = 1\" ->    \"S = 0 \\n I = 2\"  [color = \"red\"]\n\n    \"S = 1 \\n I = 2\" ->    \"S = 1 \\n I = 1\" [color = \"blue\"]\n    \"S = 1 \\n I = 2\" ->    \"S = 0 \\n I = ~\" [color = \"red\"]\n\n    \"S = 1 \\n I = ~\" ->    \"S = 1 \\n I = 2\" [color = \"blue\"]\n    \"S = 1 \\n I = ~\" ->    \"S = 0 \\n I = ~\" [color = \"red\"]\n    \"S = 1 \\n I = ~\" ->    \"S = 0 \\n I = N - 1\" [color = \"red\"]\n\n    \"S = 1 \\n I = N - 1\" -> \"S = 1 \\n I = N - 2\" [color = \"blue\"]\n    \"S = 1 \\n I = N - 1\" -> \"S = 0 \\n I = N\" [color = \"red\"]\n\n    \"S = 1 \\n I = N - 2\" -> \"S = 0 \\n I = N - 1\" [color = \"red\"]\n    \"S = 1 \\n I = N - 2\" -> \"S = 1 \\n I = ~\" [color = \"blue\"]\n\n\n    \"S = 2 \\n I = 1\" ->    \"S = 1 \\n I = 2\" [color = \"red\"]\n    \"S = 2 \\n I = 1\" ->    \"S = 2 \\n I = 0\" [color = \"blue\"]\n\n    \"S = 2 \\n I = 2\" ->    \"S = 1 \\n I = ~\" [color = \"red\"]\n    \"S = 2 \\n I = 2\" ->    \"S = 2 \\n I = 1\" [color = \"blue\"]\n\n    \"S = 2 \\n I = ~\" ->    \"S = 1 \\n I = ~\" [color = \"red\"]\n    \"S = 2 \\n I = ~\" ->    \"S = 1 \\n I = N - 2\" [color = \"red\"]\n    \"S = 2 \\n I = ~\" ->    \"S = 2 \\n I = 2\" [color = \"blue\"]\n\n    \"S = 2 \\n I = N - 2\" -> \"S = 1 \\n I = N - 1\" [color = \"red\"]\n    \"S = 2 \\n I = N - 2\" -> \"S = 2 \\n I = ~\" [color = \"blue\"]\n    \n\n    \"S = ~ \\n I = 1\" ->    \"S = ~ \\n I = 0\" [color = \"blue\"]\n    \"S = ~ \\n I = 1\" ->    \"S = ~ \\n I = 2\" [color = \"red\"]\n    \"S = ~ \\n I = 1\" ->    \"S = 2 \\n I = 2\" [color = \"red\"]\n\n    \"S = ~ \\n I = 2\" ->    \"S = ~ \\n I = ~\" [color = \"red\"]\n    \"S = ~ \\n I = 2\" ->    \"S = 2 \\n I = ~\"  [color = \"red\"]\n    \"S = ~ \\n I = 2\" ->    \"S = ~ \\n I = 1\" [color = \"blue\"]\n\n    \"S = ~ \\n I = ~\" ->    \"S = 2 \\n I = ~\" [color = \"red\"]\n    \"S = ~ \\n I = ~\" ->    \"S = 2 \\n I = N - 2\" [color = \"red\"]\n    \"S = ~ \\n I = ~\" ->    \"S = ~ \\n I = ~\"  [color = \"red\"]\n\n    \"S = ~ \\n I = ~\" ->    \"S = ~ \\n I = ~\"  [color = \"blue\"]\n    \"S = ~ \\n I = ~\" ->    \"S = ~ \\n I = 2\" [color = \"blue\"]\n\n\n    \"S = N - 1 \\n I = 1\" ->    \"S = N - 2 \\n I = 2\" [color = \"red\"]\n    \"S = N - 1 \\n I = 1\" ->    \"S = N - 1\\n I = 0\"   [color = \"blue\"]\n\n    \"S = N - 2 \\n I = 1\" -> \"S = ~ \\n I = 2\" [color = \"red\"]\n    \"S = N - 2 \\n I = 1\" -> \"S = N - 2 \\n I = 0\" [color = \"blue\"]\n\n    \"S = N - 2 \\n I = 2\" -> \"S = ~ \\n I = ~\" [color = \"red\"]\n    \"S = N - 2 \\n I = 2\" -> \"S = N - 2 \\n I = 1\" [color = \"blue\"]\n}   \n```\n\n\nThere are (N + 1)(N + 2)/2 ordered pairs of states (s, i)\n\n::: {.cell execution_count=1}\n``` {.julia .cell-code}\nN = 100\nS = 0:N\nI = 0:N\n\nn = Int64((N+1)*(N+2)/2)\n\na = Base.product(S, I) |> collect |> vec\nb = []\n\nfor i in a\n    if sum(i) <= N\n        push!(b, i)\n    end\nend\n```\n:::\n\n\n::: {.cell execution_count=2}\n``` {.julia .cell-code}\nusing NamedArrays\nusing SparseArrays\nβ = 0.5\nγ = 0.1\nQ = zeros(Float64, lastindex(b), lastindex(b))\n\nfor i in eachindex(b)\n    iS, iI = b[i]\n    for j in eachindex(b)\n        jS, jI = b[j]\n        if iS - jS == 1 && iI - jI == -1 ## Infection condition\n            Q[i, j] = β*iS*iI/N\n        elseif  iS == jS && iI - jI == 1 ## recovery condition\n            Q[i, j] = γ*iI\n        elseif  iS == jS  && iI == jI \n            Q[i, j] = -((β*iS*iI/N) + γ*iI)\n        end\n    end\nend\n```\n:::\n\n\n::: {.cell execution_count=3}\n``` {.julia .cell-code}\nusing ExponentialUtilities\nt = 10\n\nx0 = (25, 30)\nx0i = findfirst(x -> x == x0, b)\n\np0 = zeros(lastindex(b))\np0[x0i] = 1\n\npt = expv(t, Q, p0)\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n5151-element Vector{Float64}:\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n ⋮\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n 0.0\n```\n:::\n:::\n\n\nunpack the state vector\n\n::: {.cell execution_count=4}\n``` {.julia .cell-code}\nSImat = zeros(N+1, N+1)\npS = zeros(N+1)\npI = zeros(N+1)\n\nfor i in eachindex(pt)\n    S, I = b[i]\n    pS[S+1] += pt[i]\n    pI[I+1] += pt[i] \n    SImat[S+1, I+1] = pt[i]\nend\n```\n:::\n\n\n::: {.cell execution_count=5}\n``` {.julia .cell-code}\nusing StatsPlots\nplot(pS)\nheatmap(SImat)\n```\n\n::: {.cell-output .cell-output-display execution_count=6}\n![](Compartmental_Models_Markov_Chains_files/figure-html/cell-6-output-1.svg){}\n:::\n:::\n\n\n",
    "supporting": [
      "Compartmental_Models_Markov_Chains_files\\figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}