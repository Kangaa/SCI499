# Replicating Moss et al. 2019

[@moss2019WhatCanUrban]

```{julia}
using DrWatson
@quickactivate "SCI499"
```
```{julia}
using CSV
```


get the mixing matrix from CSV
```{julia}
frac_self = 0.5
frac_cbd = 0.2
path = joinpath(datadir(), "Moss2018\\mixing\\abs_all.csv")
mixmat =CSV.File(path) 
```


Epidemiological parameters

```{julia}
r0 = 1.4
σ = 2.0
γ = 0.5
```

Model Parameters type

```{julia}
struct Params
    β::Float64
    σ::Float64
    γ::Float64
    popn::Vector #Vector of patches
    mixmat::AbstractArray
end
```
The rust code includes and 'impl Params' block hich I'm not sure is necessary

Model State type
```{julia}
struct Model
    params::Params
    numpatch::Int
    t::Float64
    s::Vector
    e::Vector
    i::Vector
end
```

Event type
is an 'enum' which I'm not sure about. I cant make out what it does, but I'll try and impliment it anyway

```{julia}
@enum Event begin
    Exposure = 0
    Infection = 6 #why 6?
    Recovery = 2
end
```

next there is another 'impl' this time of the 'Model' type. I think what this is doing is specifying a way to interact with the model type. the first block is a public function 'new' which I guess generates a new model with the supplied parameters.   AFAIK the way to do this is in julia just to define a function ~method~ for the model type

