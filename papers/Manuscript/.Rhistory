geom_line()+
geom_ribbon(aes(ymin = avg_I-sd_I, ymax= avg_I+sd_I), alpha = 0.2) +
facet_grid(rows = vars(R0))+
xlim(c(0,100))
sim_stats %>%
filter() %>%
ggplot() +
aes(x = t, y = avg_I, col = deltaH) +
geom_line() +
facet_grid(rows = vars(R0))+
xlim(c(0,100))
sim_stats
sim_stats %>%
filter() %>%
ggplot() +
aes(x = t, y = avg_I, col = deltaH, group = deltaH) +
geom_line() +
facet_grid(rows = vars(R0))+
xlim(c(0,100))
sim_stats %>%
filter(R0 <= 2) %>%
ggplot() +
aes(x = t, y = avg_I, col = deltaH, group = deltaH) +
geom_line() +
facet_grid(rows = vars(R0)) +
xlim(c(0,100))
sim_stats %>%
filter(R0 <= 2) %>%
ggplot() +
aes(x = t, y = avg_I/Gmelb_pop, col = deltaH, group = deltaH) +
geom_line() +
facet_grid(rows = vars(R0)) +
xlim(c(0,100))
#| label: SA3_OD_total_inf
#| fig-cap: Average proportion of the population over time for simulations of a OD mixing metapopulation model of the melbourne metropolitan area with a range of Basic reproduction numbers ($R_0$), and local mixing coefficients($\\delta^H$).
sim_stats %>%
filter(R0 <= 2) %>%
ggplot() +
aes(x = t, y = avg_I/Gmelb_pop, col = deltaH, group = deltaH) +
geom_line() +
facet_grid(rows = vars(R0), scales = "free_y") +
xlim(c(0,100))
#| label: SA3_OD_total_inf
#| fig-cap: Average proportion of the population over time for simulations of a OD mixing metapopulation model of the melbourne metropolitan area with a range of Basic reproduction numbers ($R_0$), and local mixing coefficients($\\delta^H$).
sim_stats %>%
filter(R0 <= 2) %>%
ggplot() +
aes(x = t, y = avg_I/Gmelb_pop, col = deltaH, group = deltaH) +
geom_line() +
facet_grid(rows = vars(R0), scales = "free_y") +
xlim(c(0,150))
#| label: SA3_OD_total_inf
#| fig-cap: Average proportion of the population over time for simulations of a OD mixing metapopulation model of the melbourne metropolitan area with a range of Basic reproduction numbers ($R_0$), and local mixing coefficients($\\delta^H$).
sim_stats %>%
filter(R0 <= 2) %>%
ggplot() +
aes(x = t, y = avg_I/Gmelb_pop, col = deltaH, group = deltaH) +
geom_line() +
facet_grid(rows = vars(R0), scales = "free_y") +
xlim(c(0,200))
SA3_patch_sims <- SA3_OD_Patch_logs %>%
group_by(sim) %>%
mutate(t = row_number()) %>%
ungroup() %>%
pivot_longer(cols = c(-sim, -t), values_to = "Count", names_to = "patch") %>%
mutate(
SA = str_extract(sim, "SA./SA(.)", 1),
Mixmat = str_extract(sim, "SA./SA._..._..._(HPMM|HMM|OD)_", 1),
deltaH = as.numeric(str_extract(sim, "SA./SA.*_OD_(...)", 1)),
Intervention = "none",
beta = as.numeric(str_extract(sim, "SA./SA._(...)", group = 1)),
gamma = as.numeric(str_extract(sim, "SA./SA._..._(...)", group = 1)),
R0 = beta/gamma,
sim_num = str_extract(sim, "_(.{1,3}).csv", 1),
Measure = str_extract(sim, "(inf|sus)_.{1,3}.csv", 1),
) %>%
select(-sim) %>%
left_join(GMelb_Popns, by = join_by("patch" == "SA3_Name")) %>%
pivot_wider( names_from = Measure, values_from = Count) %>%
mutate(cum_inf = SA3_pop - sus,
prop_inf = inf/SA3_pop)
SA3_OD_Patch_dirs <- list.files("../../data/sims/SA3", pattern = "OD_..._none_(patchinf|patchsus)_([0-9]).csv", full.names = TRUE)
SA3_OD_Patch_logs <- read_csv(SA3_OD_Patch_dirs, id = "sim")
GMelb_Popns <- read_csv("../../data/GmelbSA3Pop21.csv")
SA3_patch_sims <- SA3_OD_Patch_logs %>%
group_by(sim) %>%
mutate(t = row_number()) %>%
ungroup() %>%
pivot_longer(cols = c(-sim, -t), values_to = "Count", names_to = "patch") %>%
mutate(
SA = str_extract(sim, "SA./SA(.)", 1),
Mixmat = str_extract(sim, "SA./SA._..._..._(HPMM|HMM|OD)_", 1),
deltaH = as.numeric(str_extract(sim, "SA./SA.*_OD_(...)", 1)),
Intervention = "none",
beta = as.numeric(str_extract(sim, "SA./SA._(...)", group = 1)),
gamma = as.numeric(str_extract(sim, "SA./SA._..._(...)", group = 1)),
R0 = beta/gamma,
sim_num = str_extract(sim, "_(.{1,3}).csv", 1),
Measure = str_extract(sim, "(inf|sus)_.{1,3}.csv", 1),
) %>%
select(-sim) %>%
left_join(GMelb_Popns, by = join_by("patch" == "SA3_Name")) %>%
pivot_wider( names_from = Measure, values_from = Count) %>%
mutate(cum_inf = SA3_pop - sus,
prop_inf = inf/SA3_pop)
#| label: fig-SA3_OD_patchinf_curve_eg
SA3_patch_sims %>%
filter(R0 == 1.4, deltaH == "0.5", sim_num =="6") %>%
ggplot()+
aes(x = t, y = prop_inf) +
geom_line(aes(col = patch)) +
theme(legend.position = "bottom")
#| label: fig-SA3_OD_patchinf_curve_eg
SA3_patch_sims %>%
filter(R0 == 1.4, deltaH == "0.5", sim_num =="6") %>%
ggplot()+
aes(x = t, y = cum_inf) +
geom_line(aes(col = patch)) +
theme(legend.position = "bottom")
#| label: fig-SA3_OD_patchinf_curve_eg
SA3_patch_sims %>%
filter(R0 == 1.4, deltaH == "0.5", sim_num =="6") %>%
ggplot()+
aes(x = t, y = cum_inf/SA3_pop) +
geom_line(aes(col = patch)) +
theme(legend.position = "bottom")
#| label: fig-SA3_OD_patchinf_curve_eg
SA3_patch_sims %>%
filter(R0 == 1.4, deltaH == "0.5", sim_num =="6") %>%
ggplot()+
aes(x = t, y = cum_inf) +
geom_line(aes(col = patch)) +
theme(legend.position = "bottom")
#| label: fig-SA3_OD_patchinf_curve_eg
#|
SA3_patch_sims %>%
filter(R0 == 1.4, deltaH == "0.5", sim_num =="6") %>%
ggplot()+
aes(x = t, y = cum_inf) +
geom_line(aes(col = patch)) +
theme(legend.position = "bottom")
SA3_patch_sims %>%
filter(R0 == 1.4, deltaH == "0.5", sim_num =="6") %>%
ggplot()+
aes(x = t, y = cum_inf/SA3_pop) +
geom_line(aes(col = patch)) +
theme(legend.position = "bottom")
SA3_patch_sims
SA3_patch_sims
SA3_patch_sims %>%
filter(R0 == 1.4, deltaH == "0.5", sim_num =="6") %>%
ggplot()+
aes(x = t, y = cum_inf/SA3_pop) +
geom_line(aes(col = SA3_Code)) +
theme(legend.position = "bottom")
SA3_patch_sims %>%
filter(R0 == 1.4, deltaH == "0.5", sim_num =="6") %>%
ggplot()+
aes(x = t, y = cum_inf/SA3_pop) +
geom_line(aes(col = patch)) +
theme(legend.position = "bottom")
SA3_patch_sims
SA3_patch_sims <- SA3_OD_Patch_logs %>%
group_by(sim) %>%
mutate(t = row_number()) %>%
ungroup() %>%
pivot_longer(cols = c(-sim, -t), values_to = "Count", names_to = "patch") %>%
mutate(
SA = str_extract(sim, "SA./SA(.)", 1),
Mixmat = str_extract(sim, "SA./SA._..._..._(HPMM|HMM|OD)_", 1),
deltaH = as.numeric(str_extract(sim, "SA./SA.*_OD_(...)", 1)),
Intervention = "none",
beta = as.numeric(str_extract(sim, "SA./SA._(...)", group = 1)),
gamma = as.numeric(str_extract(sim, "SA./SA._..._(...)", group = 1)),
R0 = beta/gamma,
sim_num = str_extract(sim, "_(.{1,3}).csv", 1),
Measure = str_extract(sim, "(inf|sus)_.{1,3}.csv", 1),
) %>%
select(-sim) %>%
left_join(GMelb_Popns, by = join_by("patch" == "SA3_Name")) %>%
pivot_wider( names_from = Measure, values_from = Count) %>%
mutate(cum_inf = SA3_pop - sus,
prop_inf = inf/SA3_pop,
SA3_Code = factor(SA3_Code))
#| label: fig-SA3_OD_patchinf_curve_eg
#|
SA3_patch_sims %>%
filter(R0 == 1.4, deltaH == "0.5", sim_num =="6") %>%
ggplot()+
aes(x = t, y = cum_inf/SA3_pop) +
geom_line(aes(col = patch)) +
theme(legend.position = "bottom")
#| label: fig-SA3_OD_patchinf_curve_eg
#|
SA3_patch_sims %>%
filter(R0 == 1.4, deltaH == "0.5", sim_num =="6") %>%
ggplot()+
aes(x = t, y = cum_inf/SA3_pop) +
geom_line(aes(col = SA3_Code)) +
theme(legend.position = "bottom")
#| label: fig-SA3_OD_patchinf_curve_eg
#|
SA3_patch_sims %>%
filter(R0 == 1.4, deltaH == "0.5", sim_num =="5") %>%
ggplot()+
aes(x = t, y = cum_inf/SA3_pop) +
geom_line(aes(col = SA3_Code)) +
theme(legend.position = "bottom")
#| label: fig-SA3_OD_patchinf_curve_eg
#|
SA3_patch_sims %>%
filter(R0 == 1.2, deltaH == "0.5", sim_num =="5") %>%
ggplot()+
aes(x = t, y = cum_inf/SA3_pop) +
geom_line(aes(col = SA3_Code)) +
theme(legend.position = "bottom")
#| label: fig-SA3_OD_patchinf_curve_eg
#|
SA3_patch_sims %>%
filter(R0 == 1.6, deltaH == "0.5", sim_num =="5") %>%
ggplot()+
aes(x = t, y = cum_inf/SA3_pop) +
geom_line(aes(col = SA3_Code)) +
theme(legend.position = "bottom")
#| label: fig-SA3_OD_patchinf_curve_eg
#|
SA3_patch_sims %>%
filter(R0 == 1.4, deltaH == "0.5", sim_num =="5") %>%
ggplot()+
aes(x = t, y = cum_inf/SA3_pop) +
geom_line(aes(col = SA3_Code)) +
theme(legend.position = "bottom")
#| label: fig-SA3_OD_patchinf_curve_eg
#| fig-cap: Cumulative infections (as a proportion of patch population) for each SA3 scale patch in single simulation of an OD mixing metapopulation SIR model of the greater melbourne region. $R_0 = 1.4$, $\\delta^H = 0.5$.
SA3_patch_sims %>%
filter(R0 == 1.4, deltaH == "0.5", sim_num =="5") %>%
ggplot()+
aes(x = t, y = cum_inf/SA3_pop) +
geom_line(aes(col = SA3_Code)) +
xlim(c(0,50))
patch_summary <- SA3_patch_sims %>%
group_by(patch, R0, Intervention, mu) %>%
summarise(
peak = max(prop_inf),
final_size = (first(SA3_pop) - min(sus))/first(SA3_pop),
peak_time = t[which.max(inf)])
patch_summary <- SA3_patch_sims %>%
group_by(patch, R0, Intervention, deltaH) %>%
summarise(
peak = max(prop_inf),
final_size = (first(SA3_pop) - min(sus))/first(SA3_pop),
peak_time = t[which.max(inf)])
patch_summary
patch_summary %>%
group_by(patch, R0) +
summarise(
deltaH_peak_diff = max(peak) - min(peak),
deltaH_fs_diff = max(peak) - min(peak)
)
patch_summary
patch_summary <- SA3_patch_sims %>%
group_by(SA3_Code, patch, R0, Intervention, deltaH) %>%
summarise(
peak = max(prop_inf),
final_size = (first(SA3_pop) - min(sus))/first(SA3_pop),
peak_time = t[which.max(inf)])
patch_summary %>%
group_by(patch, R0) +
summarise(
deltaH_peak_diff = max(peak) - min(peak),
deltaH_fs_diff = max(peak) - min(peak)
)
patch_summary %>%
group_by(patch, R0)
patch_summary %>%
group_by(patch, R0) +
summarise(
deltaH_peak_diff = max(peak) - min(peak),
deltaH_fs_diff = max(final_size) - min(final_size)
)
patch_summary %>%
group_by(patch, R0) +
summarise(
deltaH_fs_diff = max(final_size) - min(final_size)
)
patch_summary %>%
group_by(patch, R0) %>%
summarise(
deltaH_peak_diff = max(peak) - min(peak),
deltaH_fs_diff = max(final_size) - min(final_size)
)
patch_summary %>%
group_by(patch, R0) %>%
summarise(
deltaH_peak_diff = max(peak) - min(peak),
deltaH_fs_diff = max(final_size) - min(final_size)
) %>%
ggplot() +
aes(x = SA3_Code, y = deltaH_peak_diff) +
geom_bar()
patch_summary %>%
group_by(SA3_Code, R0) %>%
summarise(
deltaH_peak_diff = max(peak) - min(peak),
deltaH_fs_diff = max(final_size) - min(final_size)
) %>%
ggplot() +
aes(x = SA3_Code, y = deltaH_peak_diff) +
geom_bar()
patch_summary %>%
group_by(SA3_Code, R0) %>%
summarise(
deltaH_peak_diff = max(peak) - min(peak),
deltaH_fs_diff = max(final_size) - min(final_size)
) %>%
ggplot() +
aes(x = SA3_Code, y = deltaH_peak_diff) +
geom_col()
deltaH_diff <- patch_summary %>%
group_by(SA3_Code, R0) %>%
summarise(
deltaH_peak_diff = max(peak) - min(peak),
deltaH_fs_diff = max(final_size) - min(final_size)
)
deltaH_diff
patch_summary %>%
filter(R0 == 2) %>%
ggplot() +
aes(x = patch, y = peak) +
geom_point(aes(col = mu)) +
theme(axis.text.x = element_text(angle = -45, vjust = 0, hjust = 0))
patch_summary %>%
filter(R0 == 2) %>%
ggplot() +
aes(x = patch, y = peak) +
geom_point(aes(col = deltaH)) +
theme(axis.text.x = element_text(angle = -45, vjust = 0, hjust = 0))
patch_summary %>%
ggplot() +
aes(x = patch, y = peak) +
geom_point(aes(col = deltaH)) +
theme(axis.text.x = element_text(angle = -45, vjust = 0, hjust = 0))
patch_summary %>%
group_by(SA3_Code, deltaH) %>%
ggplot() +
aes(x = patch, y = peak) +
geom_point(aes(col = deltaH)) +
theme(axis.text.x = element_text(angle = -45, vjust = 0, hjust = 0))
patch_summary <- SA3_patch_sims %>%
group_by(SA3_Code, patch, Intervention, deltaH) %>%
summarise(
peak = max(prop_inf),
final_size = (first(SA3_pop) - min(sus))/first(SA3_pop),
peak_time = t[which.max(inf)])
patch_summary %>%
ggplot() +
aes(x = patch, y = peak) +
geom_point(aes(col = deltaH)) +
theme(axis.text.x = element_text(angle = -45, vjust = 0, hjust = 0))
#| label: fig-SA3_OD_patch_peaks
#| fig-cap: showing the peak proportion of infected individuals in each SA3 patch of an OD mixing metapopulation with varying contributions of local mixing(\delta^H)
patch_summary %>%
group_by(SA3_Code, deltaH) %>%
ggplot() +
aes(x = patch, y = peak) +
geom_point(aes(col = deltaH)) +
theme(axis.text.x = element_text(angle = -45, vjust = 0, hjust = 0))
patch_summary <- SA3_patch_sims %>%
group_by(SA3_Code, patch, R0, Intervention, deltaH) %>%
summarise(
peak = max(prop_inf),
final_size = (first(SA3_pop) - min(sus))/first(SA3_pop),
peak_time = t[which.max(inf)])
#| label: fig-SA3_OD_patch_peaks
#| fig-cap: showing the peak proportion of infected individuals in each SA3 patch of an OD mixing metapopulation with varying contributions of local mixing(\delta^H)
patch_summary %>%
filter(R0 == 2.0)%>%
ggplot() +
aes(x = patch, y = peak) +
geom_point(aes(col = deltaH)) +
theme(axis.text.x = element_text(angle = -45, vjust = 0, hjust = 0))
#| label: fig-SA3_OD_outcomes
#| fig-cap: Final (a) and peak (b) infection numbers (as a proportion of the entire population), peak time (c) and total duration (d) of a simulated SIR metapopulation model with OD mixing matrix at different values of $\delta^H$ and $R_0$
#| fig-subcap:
#|   - ""
#|   - ""
#|   - ""
#|   - ""
#| layout-ncol: 2
sim_summary %>%
filter(Intervention == "none", SA == "3", R0 <= 2) %>%
ggplot() +
aes(x = deltaH, y = R0) +
geom_point(aes(col = finalsize), size = 5)
library(ggplot2)
sim_dirs <- list.files("../../data/sims/SA3", pattern = "OD_..._none_([0-9]).csv", full.names = TRUE)
library(tidyverse)
library(sf)
library(glue)
library(RColorBrewer)
levels <- list(MB = "MB", SA1 = "SA1", SA2 = "SA2", SA3 = "SA3", SA4 = "SA4")
Shapes <- map(
map(
levels,
\(x) glue("../../data/ASGS_GDA2020/{x}_2021_AUST_SHP_GDA2020/{x}_2021_AUST_GDA2020.shp")),
read_sf)
SAcols <- brewer.pal(4, "Dark2")
GMelb_Shapes <- Shapes |>
map(\(x) filter(x, GCC_NAME21 == "Greater Melbourne"))
#GMelb_Shapes <- GMelb_Shapes[[1]] %>%
#  full_join(GMelb_Shapes[[2]]) %>%
#  full_join(GMelb_Shapes[[3]]) %>%
#  st_sf(sf_column_name = "geometry")
#| caption: Population of SA2 regions in the GMGCCSA
#| label: fig-GMelbPop
plotmixmat <- function(mixmat){
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = j, y = i, fill = log(mixing)) +
geom_tile(show.legend = FALSE) +
theme(axis.text = element_blank(),
axis.ticks = element_blank())+
scale_fill_continuous(type = "viridis")}
GMelb_Popns <- map(
map(
c("2", "3", "4"),
\(x) str_replace("../../data/SA_X__Popns_AUS.csv", "_X_", x)),
read_csv) |>
`names<-`(c("SA2", "SA3", "SA4"))
PPMMs <- map(c("SA2", "SA3", "SA4"),
\(x){
size <- nrow(GMelb_Popns[[x]])
MMpop <- matrix(NA,
size,
size,
dimnames = list(
GMelb_Popns[[x]][[paste0(x, "_Code")]],
GMelb_Popns[[x]][[paste0(x, "_Code")]]))
Ntot = sum(GMelb_Popns[[x]][[3]])
for (i in seq_along(MMpop[1,])){
for (j in seq_along(MMpop[,1])){
MMpop[i,j] <- GMelb_Popns[[x]][[3]][j]/Ntot
}
}
MMpop
})
#| label: fig-GMelb_PPM
#| caption: Population proportional mixing matrices
#| fig-subcap:
#|   - "SA3"
#|   - "SA4"
#| layout-ncol: 2
PPMMs[[2]] %>%
plotmixmat()
PPMMs[[3]] %>%
plotmixmat()
PPMMs
GMelb_Popns
GMelb_Popns <- map(
map(
c("2", "3", "4"),
\(x) str_replace("../../data/GmelbSA_X_Pop21.csv.csv", "_X_", x)),
read_csv) |>
`names<-`(c("SA2", "SA3", "SA4"))
GMelb_Popns <- map(
map(
c("2", "3", "4"),
\(x) str_replace("../../data/GmelbSA_X_Pop21csv", "_X_", x)),
read_csv) |>
`names<-`(c("SA2", "SA3", "SA4"))
.csv
GMelb_Popns <- map(
map(
c("2", "3", "4"),
\(x) str_replace("../../data/GmelbSA_X_Pop21.csv.csv", "_X_", x)),
read_csv) |>
`names<-`(c("SA2", "SA3", "SA4"))
GMelb_Popns <- map(
map(
c("2", "3", "4"),
\(x) str_replace("../../data/GmelbSA_X_Pop21.csv", "_X_", x)),
read_csv) |>
`names<-`(c("SA2", "SA3", "SA4"))
PPMMs <- map(c("SA2", "SA3", "SA4"),
\(x){
size <- nrow(GMelb_Popns[[x]])
MMpop <- matrix(NA,
size,
size,
dimnames = list(
GMelb_Popns[[x]][[paste0(x, "_Code")]],
GMelb_Popns[[x]][[paste0(x, "_Code")]]))
Ntot = sum(GMelb_Popns[[x]][[3]])
for (i in seq_along(MMpop[1,])){
for (j in seq_along(MMpop[,1])){
MMpop[i,j] <- GMelb_Popns[[x]][[3]][j]/Ntot
}
}
MMpop
})
#| label: fig-GMelb_PPM
#| caption: Population proportional mixing matrices
#| fig-subcap:
#|   - "SA3"
#|   - "SA4"
#| layout-ncol: 2
PPMMs[[2]] %>%
plotmixmat()
PPMMs[[3]] %>%
plotmixmat()
