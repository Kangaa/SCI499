}
}
}
GMelb_Shapes$SA1 %>%
names()
GMelb_Shapes$SA1 %>%
names() %>%
grepl("CODE")
GMelb_Shapes$SA1 %>%
names() %>%
`[`grepl("CODE")
GMelb_Shapes$SA1 %>%
names() %>%
`[`(grepl("CODE"))
names <- GMelb_Shapes$SA1 %>%
names()
names %>%
`[`(grepl("CODE"))
names[(grepl("CODE"))]
names[(grepl("CODE"), names)]
Hmixmat <- function(data, xi = c(0.25, 0.25, 0.25, 0.25)){
npatch = nrow(data)
levels = c("SA2", "SA3", "SA4", "GCC")
level_vec = vector("character", npatch)
mixmat = matrix(0, npatch, npatch,
dimnames = list(data[["SA2_CODE21"]],
data[["SA2_CODE21"]]))
for (i in 1:npatch){
patch_i <- GMelb_MM_eg[i,]
norm <- c(0,0,0,0)
for (j in 1:npatch){
patch_j <- GMelb_MM_eg[j,]
for (l in seq_along(levels)){ #find lowest level of association (LLA)
code_l <-  glue("{levels[l]}_CODE21")
if (patch_i[[code_l]] == patch_j[[code_l]]){
level_vec[j] <- levels[l] #place LLA in level_vec(i)
norm[l:length(norm)] <- norm[l:length(norm)] + 1 #add +1 to the count of patches in the same level L as i
break
}
}
}
for (l in seq_along(levels)){
for (j in 1:npatch){
if (level_vec[j] %in% levels[1:l]){
mixmat[i,j] <- mixmat[i,j] + (xi[l]/norm[l])
}
}
}
}
}
names[(grepl("CODE"), names)]
names[(grepl("CODE", names) )]
names[(grepl("SA._CODE", names) )]
GMelb_Shapes$SA1 %>%
names() %>% grepl("SA._CODE", _)
names <- GMelb_Shapes$SA1 %>%
names() %>% grepl("SA._CODE", .)
names
names <- GMelb_Shapes$SA1 %>%
names() %>%
subset(grepl("SA._CODE", .))
names
xi <- rep(1/length(levels), length(levels))
xi
levels <- data %>%
names() %>%
subset(grepl("SA._CODE", .))
xi <- rep(1/length(levels), length(levels))
data <- GMelb_Shapes$SA1
levels <- data %>%
names() %>%
subset(grepl("SA._CODE", .))
xi <- rep(1/length(levels), length(levels))
xi
levels
levels <- data %>%
names() %>%
subset(grepl("SA._CODE | GCC_CODE21", .))
levels <- data %>%
names() %>%
subset(grepl("SA._CODE | GCC_CODE21", .))
levels
levels <- data %>%
names() %>%
subset(grepl("SA._CODE|GCC_CODE21", .))
levels <- data %>%
names() %>%
subset(grepl("SA._CODE|GCC_CODE21", .))
levels
xi <- rep(1/length(levels), length(levels))
xi
levels[[1]]
levels[1]
mixmat = matrix(0, npatch, npatch,
dimnames = list(data[[glue("{levels[1]}_CODE21")]],
data[[glue("{levels[1]}_CODE21")]]))
npatch = nrow(data)
Hmixmat <- function(data){
levels <- data %>%
names() %>%
subset(grepl("SA._CODE|GCC_CODE21", .))
xi <- rep(1/length(levels), length(levels))
npatch = nrow(data)
level_vec = vector("character", npatch)
mixmat = matrix(0, npatch, npatch,
dimnames = list(data[[glue("{levels[1]}_CODE21")]],
data[[glue("{levels[1]}_CODE21")]]))
for (i in 1:npatch){
patch_i <- data[i,]
norm <- c(0,0,0,0)
for (j in 1:npatch){
patch_j <- data[j,]
for (l in seq_along(levels)){ #find lowest level of association (LLA)
code_l <-  glue("{levels[l]}_CODE21")
if (patch_i[[code_l]] == patch_j[[code_l]]){
level_vec[j] <- levels[l] #place LLA in level_vec(i)
norm[l:length(norm)] <- norm[l:length(norm)] + 1 #add +1 to the count of patches in the same level L as i
break
}
}
}
for (l in seq_along(levels)){
for (j in 1:npatch){
if (level_vec[j] %in% levels[1:l]){
mixmat[i,j] <- mixmat[i,j] + (xi[l]/norm[l])
}
}
}
}
}
Hmixmat <- function(data){
levels <- data %>%
names() %>%
subset(grepl("SA._CODE|GCC_CODE21", .))
xi <- rep(1/length(levels), length(levels))
npatch = nrow(data)
level_vec = vector("character", npatch)
mixmat = matrix(0, npatch, npatch,
dimnames = list(data[[glue("{levels[1]}_CODE21")]],
data[[glue("{levels[1]}_CODE21")]]))
for (i in 1:npatch){
patch_i <- data[i,]
norm <- c(0,0,0,0)
for (j in 1:npatch){
patch_j <- data[j,]
for (l in seq_along(levels)){ #find lowest level of association (LLA)
code_l <-  glue("{levels[l]}_CODE21")
if (patch_i[[code_l]] == patch_j[[code_l]]){
level_vec[j] <- levels[l] #place LLA in level_vec(i)
norm[l:length(norm)] <- norm[l:length(norm)] + 1 #add +1 to the count of patches in the same level L as i
break
}
}
}
for (l in seq_along(levels)){
for (j in 1:npatch){
if (level_vec[j] %in% levels[1:l]){
mixmat[i,j] <- mixmat[i,j] + (xi[l]/norm[l])
}
}
}
}
mixmat
}
Hmixmat(GMelb_Shapes$SA3)
Hmixmat()
data <- GMelb_Shapes$SA3
levels <- data %>%
names() %>%
subset(grepl("SA._CODE|GCC_CODE21", .))
xi <- rep(1/length(levels), length(levels))
npatch = nrow(data)
level_vec = vector("character", npatch)
mixmat = matrix(0, npatch, npatch,
dimnames = list(data[[glue("{levels[1]}_CODE21")]],
data[[glue("{levels[1]}_CODE21")]]))
patch_i <- data[i,]
patch_i
norm <- rep(0, length(levels))
patch_j <- data[j,]
patch_j
code_l <-  glue("{levels[l]}_CODE21")
patch_i[[code_l]]
code_l <-  glue("{levels[l]}_CODE21")
code_l
levels
code_l
glue("{levels[l]}_CODE21")
levels[l]
l
seq_along(levels)
for (l in seq_along(levels)){ #find lowest level of association (LLA)
code_l <-  glue("{levels[l]}_CODE21")
if (patch_i[[code_l]] == patch_j[[code_l]]){
level_vec[j] <- levels[l] #place LLA in level_vec(i)
norm[l:length(norm)] <- norm[l:length(norm)] + 1 #add +1 to the count of patches in the same level L as i
break
}
}
Hmixmat(GMelb_Shapes$SA3)
for (i in 1:npatch){
patch_i <- data[i,]
norm <- rep(0, length(levels))
for (j in 1:npatch){
patch_j <- data[j,]
for (l in seq_along(levels)){ #find lowest level of association (LLA)
code_l <-  glue("{levels[l]}_CODE21")
if (patch_i[[code_l]] == patch_j[[code_l]]){
level_vec[j] <- levels[l] #place LLA in level_vec(i)
norm[l:length(norm)] <- norm[l:length(norm)] + 1 #add +1 to the count of patches in the same level L as i
break
}
}
}
for (l in seq_along(levels)){
for (j in 1:npatch){
if (level_vec[j] %in% levels[1:l]){
mixmat[i,j] <- mixmat[i,j] + (xi[l]/norm[l])
}
}
}
}
glue("{levels[l]}_CODE21")
code_l
levels <- data %>%
names() %>%
subset(grepl("SA._CODE|GCC_CODE21", .))
levels
levels[l]
code_l <-  levels[l]
patch_i[[code_l]]
Hmixmat <- function(data){
levels <- data %>%
names() %>%
subset(grepl("SA._CODE|GCC_CODE21", .))
xi <- rep(1/length(levels), length(levels))
npatch = nrow(data)
level_vec = vector("character", npatch)
mixmat = matrix(0, npatch, npatch,
dimnames = list(data[[glue("{levels[1]}_CODE21")]],
data[[glue("{levels[1]}_CODE21")]]))
for (i in 1:npatch){
patch_i <- data[i,]
norm <- rep(0, length(levels))
for (j in 1:npatch){
patch_j <- data[j,]
for (l in seq_along(levels)){ #find lowest level of association (LLA)
code_l <-  levels[l]
if (patch_i[[code_l]] == patch_j[[code_l]]){
level_vec[j] <- levels[l] #place LLA in level_vec(i)
norm[l:length(norm)] <- norm[l:length(norm)] + 1 #add +1 to the count of patches in the same level L as i
break
}
}
}
for (l in seq_along(levels)){
for (j in 1:npatch){
if (level_vec[j] %in% levels[1:l]){
mixmat[i,j] <- mixmat[i,j] + (xi[l]/norm[l])
}
}
}
}
mixmat
}
Hmixmat(GMelb_Shapes$SA3)
plotmixmat <- function(mixmat){
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = j, y = i, fill = mixing) +
geom_tile() +
theme(axis.text.x = element_text(angle = -45, hjust = 0))+
scale_fill_continuous(type = "viridis")}
GMelb_Shapes$SA3 %>%
Hmixmat() %>%
plotmixmat()
GMelb_Shapes$SA2 %>%
Hmixmat() %>%
plotmixmat()
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = j, y = i, fill = log(mixing)) +
geom_tile() +
theme(axis.text.x = element_text(angle = -45, hjust = 0))+
scale_fill_continuous(type = "viridis")}
plotmixmat <- function(mixmat){
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = j, y = i, fill = log(mixing)) +
geom_tile() +
theme(axis.text.x = element_text(angle = -45, hjust = 0))+
scale_fill_continuous(type = "viridis")}
GMelb_Shapes$SA3 %>%
Hmixmat() %>%
plotmixmat()
GMelb_Shapes %>%
map(Hmixmat()) %>%
map(plotmixmat())
GMelb_Shapes %>%
map(Hmixmat) %>%
map(plotmixmat)
Hmixmat(GMelb_MM_eg)
Hmixmat(GMelb_MM_eg) %>%
plotmixmat()
matrix(runif, 2000,2000)
matrix(runif(), 2000,2000)
matrix(runif(1), 2000,2000)
GMelb_Shapes[2:4]
GMelb_Shapes[2:5] %>%
map(Hmixmat) %>%
map(plotmixmat)
GMelb_Shapes[4] %>%
map(Hmixmat) %>%
map(plotmixmat)
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = factor(j), y = factor(i), fill = log(mixing)) +
geom_tile() +
theme(axis.text.x = element_text(angle = -45, hjust = 0))+
scale_fill_continuous(type = "viridis")}
plotmixmat <- function(mixmat){
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = factor(j), y = factor(i), fill = log(mixing)) +
geom_tile() +
theme(axis.text.x = element_text(angle = -45, hjust = 0))+
scale_fill_continuous(type = "viridis")}
GMelb_Shapes[4] %>%
map(Hmixmat) %>%
map(plotmixmat)
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing")
View(mixmat)
GMelb_MM_eg <- GMelb_Shapes$SA2 %>%
filter(
SA2_NAME21 == "Flemington" |
SA2_NAME21 == "Ascot Vale" |
SA2_NAME21 == "West Melbourne - Industrial" |
SA2_NAME21 == "Flemington Racecourse" |
SA2_NAME21 == "Kensington (Vic.)" |
SA2_NAME21 == "Footscray" |
SA2_NAME21 == "Maribyrnong")
Hmixmat <- function(data){
levels <- data %>%
names() %>%
subset(grepl("SA._CODE|GCC_CODE21", .))
xi <- rep(1/length(levels), length(levels))
npatch = nrow(data)
level_vec = vector("character", npatch)
mixmat = matrix(0, npatch, npatch,
dimnames = list(data[[levels[1]]],
data[[levels[1]]]))
for (i in 1:npatch){
patch_i <- data[i,]
norm <- rep(0, length(levels))
for (j in 1:npatch){
patch_j <- data[j,]
for (l in seq_along(levels)){ #find lowest level of association (LLA)
code_l <-  levels[l]
if (patch_i[[code_l]] == patch_j[[code_l]]){
level_vec[j] <- levels[l] #place LLA in level_vec(i)
norm[l:length(norm)] <- norm[l:length(norm)] + 1 #add +1 to the count of patches in the same level L as i
break
}
}
}
for (l in seq_along(levels)){
for (j in 1:npatch){
if (level_vec[j] %in% levels[1:l]){
mixmat[i,j] <- mixmat[i,j] + (xi[l]/norm[l])
}
}
}
}
mixmat
}
plotmixmat <- function(mixmat){
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = factor(j), y = factor(i), fill = log(mixing)) +
geom_tile() +
theme(axis.text.x = element_text(angle = -45, hjust = 0))+
scale_fill_continuous(type = "viridis")}
Hmixmat(GMelb_MM_eg) %>%
plotmixmat()
GMelb_Shapes[4] %>%
map(Hmixmat) %>%
map(plotmixmat)
GMelb_Shapes[2] %>%
map(Hmixmat) %>%
map(plotmixmat)
GMelb_Shapes[3:5] %>%
map(Hmixmat) %>%
map(plotmixmat)
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = factor(j), y = factor(i), fill = log(mixing)) +
geom_tile() +
theme(axis.text = element_blank())+
scale_fill_continuous(type = "viridis")}
plotmixmat <- function(mixmat){
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = factor(j), y = factor(i), fill = log(mixing)) +
geom_tile() +
theme(axis.text = element_blank())+
scale_fill_continuous(type = "viridis")}
#| label: fig-egMM
#| caption:  Hierarchical Mixing matrix for the example region shown in @fig-Example_region
Hmixmat(GMelb_MM_eg) %>%
plotmixmat()
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = factor(j), y = factor(i), fill = log(mixing)) +
geom_tile() +
theme(axis.text = element_blank(),
axis.ticks = element_blank())+
scale_fill_continuous(type = "viridis")}
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = factor(j), y = factor(i), fill = log(mixing)) +
geom_tile() +
theme(axis.text = element_blank(),
axis.ticks = element_blank())+
scale_fill_continuous(type = "viridis")}
plotmixmat <- function(mixmat){
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = factor(j), y = factor(i), fill = log(mixing)) +
geom_tile() +
theme(axis.text = element_blank(),
axis.ticks = element_blank())+
scale_fill_continuous(type = "viridis")}
#| label: fig-egMM
#| caption:  Hierarchical Mixing matrix for the example region shown in @fig-Example_region
Hmixmat(GMelb_MM_eg) %>%
plotmixmat()
GMelb_Shapes[3:5] %>%
map(Hmixmat) %>%
map(plotmixmat)
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = j, y = i, fill = log(mixing)) +
geom_tile() +
theme(axis.text = element_blank(),
axis.ticks = element_blank())+
scale_fill_continuous(type = "viridis")}
plotmixmat <- function(mixmat){
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = j, y = i, fill = log(mixing)) +
geom_tile() +
theme(axis.text = element_blank(),
axis.ticks = element_blank())+
scale_fill_continuous(type = "viridis")}
#| label: fig-egMM
#| caption:  Hierarchical Mixing matrix for the example region shown in @fig-Example_region
Hmixmat(GMelb_MM_eg) %>%
plotmixmat()
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = j, y = i, fill = log(mixing)) +
geom_tile(show.legend = FALSE) +
theme(axis.text = element_blank(),
axis.ticks = element_blank())+
scale_fill_continuous(type = "viridis")}
plotmixmat <- function(mixmat){
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = j, y = i, fill = log(mixing)) +
geom_tile(show.legend = FALSE) +
theme(axis.text = element_blank(),
axis.ticks = element_blank())+
scale_fill_continuous(type = "viridis")}
#| label: fig-egMM
#| caption:  Hierarchical Mixing matrix for the example region shown in @fig-Example_region
Hmixmat(GMelb_MM_eg) %>%
plotmixmat()
GMelb_Shapes[3:5] %>%
map(Hmixmat) %>%
map(plotmixmat)
