mixmat[i,j] <- mixmat[i,j] + (xi[l]/norm[l])
}
}
}
}
mixmat
}
Hmixmat(GMelb_Shapes$SA3)
plotmixmat <- function(mixmat){
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = j, y = i, fill = mixing) +
geom_tile() +
theme(axis.text.x = element_text(angle = -45, hjust = 0))+
scale_fill_continuous(type = "viridis")}
GMelb_Shapes$SA3 %>%
Hmixmat() %>%
plotmixmat()
GMelb_Shapes$SA2 %>%
Hmixmat() %>%
plotmixmat()
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = j, y = i, fill = log(mixing)) +
geom_tile() +
theme(axis.text.x = element_text(angle = -45, hjust = 0))+
scale_fill_continuous(type = "viridis")}
plotmixmat <- function(mixmat){
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = j, y = i, fill = log(mixing)) +
geom_tile() +
theme(axis.text.x = element_text(angle = -45, hjust = 0))+
scale_fill_continuous(type = "viridis")}
GMelb_Shapes$SA3 %>%
Hmixmat() %>%
plotmixmat()
GMelb_Shapes %>%
map(Hmixmat()) %>%
map(plotmixmat())
GMelb_Shapes %>%
map(Hmixmat) %>%
map(plotmixmat)
Hmixmat(GMelb_MM_eg)
Hmixmat(GMelb_MM_eg) %>%
plotmixmat()
matrix(runif, 2000,2000)
matrix(runif(), 2000,2000)
matrix(runif(1), 2000,2000)
GMelb_Shapes[2:4]
GMelb_Shapes[2:5] %>%
map(Hmixmat) %>%
map(plotmixmat)
GMelb_Shapes[4] %>%
map(Hmixmat) %>%
map(plotmixmat)
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = factor(j), y = factor(i), fill = log(mixing)) +
geom_tile() +
theme(axis.text.x = element_text(angle = -45, hjust = 0))+
scale_fill_continuous(type = "viridis")}
plotmixmat <- function(mixmat){
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = factor(j), y = factor(i), fill = log(mixing)) +
geom_tile() +
theme(axis.text.x = element_text(angle = -45, hjust = 0))+
scale_fill_continuous(type = "viridis")}
GMelb_Shapes[4] %>%
map(Hmixmat) %>%
map(plotmixmat)
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing")
View(mixmat)
GMelb_MM_eg <- GMelb_Shapes$SA2 %>%
filter(
SA2_NAME21 == "Flemington" |
SA2_NAME21 == "Ascot Vale" |
SA2_NAME21 == "West Melbourne - Industrial" |
SA2_NAME21 == "Flemington Racecourse" |
SA2_NAME21 == "Kensington (Vic.)" |
SA2_NAME21 == "Footscray" |
SA2_NAME21 == "Maribyrnong")
Hmixmat <- function(data){
levels <- data %>%
names() %>%
subset(grepl("SA._CODE|GCC_CODE21", .))
xi <- rep(1/length(levels), length(levels))
npatch = nrow(data)
level_vec = vector("character", npatch)
mixmat = matrix(0, npatch, npatch,
dimnames = list(data[[levels[1]]],
data[[levels[1]]]))
for (i in 1:npatch){
patch_i <- data[i,]
norm <- rep(0, length(levels))
for (j in 1:npatch){
patch_j <- data[j,]
for (l in seq_along(levels)){ #find lowest level of association (LLA)
code_l <-  levels[l]
if (patch_i[[code_l]] == patch_j[[code_l]]){
level_vec[j] <- levels[l] #place LLA in level_vec(i)
norm[l:length(norm)] <- norm[l:length(norm)] + 1 #add +1 to the count of patches in the same level L as i
break
}
}
}
for (l in seq_along(levels)){
for (j in 1:npatch){
if (level_vec[j] %in% levels[1:l]){
mixmat[i,j] <- mixmat[i,j] + (xi[l]/norm[l])
}
}
}
}
mixmat
}
plotmixmat <- function(mixmat){
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = factor(j), y = factor(i), fill = log(mixing)) +
geom_tile() +
theme(axis.text.x = element_text(angle = -45, hjust = 0))+
scale_fill_continuous(type = "viridis")}
Hmixmat(GMelb_MM_eg) %>%
plotmixmat()
GMelb_Shapes[4] %>%
map(Hmixmat) %>%
map(plotmixmat)
GMelb_Shapes[2] %>%
map(Hmixmat) %>%
map(plotmixmat)
GMelb_Shapes[3:5] %>%
map(Hmixmat) %>%
map(plotmixmat)
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = factor(j), y = factor(i), fill = log(mixing)) +
geom_tile() +
theme(axis.text = element_blank())+
scale_fill_continuous(type = "viridis")}
plotmixmat <- function(mixmat){
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = factor(j), y = factor(i), fill = log(mixing)) +
geom_tile() +
theme(axis.text = element_blank())+
scale_fill_continuous(type = "viridis")}
#| label: fig-egMM
#| caption:  Hierarchical Mixing matrix for the example region shown in @fig-Example_region
Hmixmat(GMelb_MM_eg) %>%
plotmixmat()
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = factor(j), y = factor(i), fill = log(mixing)) +
geom_tile() +
theme(axis.text = element_blank(),
axis.ticks = element_blank())+
scale_fill_continuous(type = "viridis")}
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = factor(j), y = factor(i), fill = log(mixing)) +
geom_tile() +
theme(axis.text = element_blank(),
axis.ticks = element_blank())+
scale_fill_continuous(type = "viridis")}
plotmixmat <- function(mixmat){
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = factor(j), y = factor(i), fill = log(mixing)) +
geom_tile() +
theme(axis.text = element_blank(),
axis.ticks = element_blank())+
scale_fill_continuous(type = "viridis")}
#| label: fig-egMM
#| caption:  Hierarchical Mixing matrix for the example region shown in @fig-Example_region
Hmixmat(GMelb_MM_eg) %>%
plotmixmat()
GMelb_Shapes[3:5] %>%
map(Hmixmat) %>%
map(plotmixmat)
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = j, y = i, fill = log(mixing)) +
geom_tile() +
theme(axis.text = element_blank(),
axis.ticks = element_blank())+
scale_fill_continuous(type = "viridis")}
plotmixmat <- function(mixmat){
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = j, y = i, fill = log(mixing)) +
geom_tile() +
theme(axis.text = element_blank(),
axis.ticks = element_blank())+
scale_fill_continuous(type = "viridis")}
#| label: fig-egMM
#| caption:  Hierarchical Mixing matrix for the example region shown in @fig-Example_region
Hmixmat(GMelb_MM_eg) %>%
plotmixmat()
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = j, y = i, fill = log(mixing)) +
geom_tile(show.legend = FALSE) +
theme(axis.text = element_blank(),
axis.ticks = element_blank())+
scale_fill_continuous(type = "viridis")}
plotmixmat <- function(mixmat){
mixmat %>%
as_tibble(rownames = "i") %>%
pivot_longer(-1, names_to = "j", values_to = "mixing") %>%
ggplot() +
aes(x = j, y = i, fill = log(mixing)) +
geom_tile(show.legend = FALSE) +
theme(axis.text = element_blank(),
axis.ticks = element_blank())+
scale_fill_continuous(type = "viridis")}
#| label: fig-egMM
#| caption:  Hierarchical Mixing matrix for the example region shown in @fig-Example_region
Hmixmat(GMelb_MM_eg) %>%
plotmixmat()
GMelb_Shapes[3:5] %>%
map(Hmixmat) %>%
map(plotmixmat)
23*13
299 + 11 + 13 + 11+ 10 + 4
18*23
4*23
4*28
SA2_files <- list.files("../../../data/sims/SA2", full.names = TRUE, recursive = TRUE)
SA2_tot_files <- SA2_files[!str_detect(SA2_files, "patchinf|patchsus|summary")]
library(tidyverse)
SA2_files <- list.files("../../../data/sims/SA2", full.names = TRUE, recursive = TRUE)
SA2_files
SA2_files[1]
SA2_files %>% tail(1)
SA2_files <- list.files("../../../data/sims/SA2", full.names = TRUE)
SA2_files %>% tail(1)
SA2_files %>% tail(-1)
SA2_files <- list.files("../../../data/sims/SA2", full.names = TRUE) %>% tail(-1)
SA2_tot_files <- SA2_files[!str_detect(SA2_files, "patchinf|patchsus|summary")]
SA2_sims <- read_csv(SA2_tot_files, col_names = c("t", "S", "I"), skip = 2, id = "sim")
SA2_files
SA2_files %>% tail(-1)
SA2_files %>% tail(1)
SA2_files %>% head(-1)
SA2_files <- list.files("../../../data/sims/SA2", full.names = TRUE) %>% head(-1)
SA2_files %>% tail(1)
SA2_tot_files <- SA2_files[!str_detect(SA2_files, "patchinf|patchsus|summary")]
SA2_sims <- read_csv(SA2_tot_files, col_names = c("t", "S", "I"), skip = 2, id = "sim")
SA2_sims <- read_csv(SA2_tot_files, col_names = c("t", "S", "I"), skip = 2, id = "sim")
SA2_sims <- SA2_sims |>
mutate(
beta = as.numeric(str_extract(sim, "(...)_.{3}_.{3}_.{1,3}.csv", group = 1)),
gamma = as.numeric(str_extract(sim, "(...)_.{3}_.{1,3}.csv", group = 1)),
mu = as.numeric(str_extract(sim, "(...)_.{1,3}.csv", group = 1)),
R0 = beta/gamma,
SA = 2)
SA2_sims |>
filter(R0 == 1.2 | R0 == 1.6 | R0 == 2) |>
ggplot() +
aes(x = t, y = I, col = factor(mu), group = sim) +
geom_line() +
facet_grid(R0~mu, scales = "free", labeller = label_both) +
xlab("time(days)") +
ylab("n infected individuals") +
theme_bw(base_size = 14) +
theme(legend.position = "none") +
scale_x_continuous(breaks = c(0, 50, 100))
SA2_sims |>
ggplot() +
aes(x = t, y = I, col = factor(mu), group = sim) +
geom_line() +
facet_grid(R0~mu, scales = "free", labeller = label_both) +
xlab("time(days)") +
ylab("n infected individuals") +
theme_bw(base_size = 14) +
theme(legend.position = "none") +
scale_x_continuous(breaks = c(0, 50, 100))
SA2_sims |>
ggplot() +
aes(x = t, y = I, col = factor(mu), group = sim) +
geom_line() +
facet_grid(mu ~ R0, scales = "free", labeller = label_both) +
xlab("time(days)") +
ylab("n infected individuals") +
theme_bw(base_size = 14) +
theme(legend.position = "none") +
scale_x_continuous(breaks = c(0, 50, 100))
SA2_sims |>
ggplot() +
aes(x = t, y = I, col = factor(mu), group = sim) +
geom_line() +
facet_grid(mu ~ R0, scales = "free_y", labeller = label_both) +
xlab("time(days)") +
ylab("n infected individuals") +
theme_bw(base_size = 14) +
theme(legend.position = "none") +
scale_x_continuous(breaks = c(0, 50, 100))
SA2_sims |>
ggplot() +
aes(x = t, y = I, col = factor(mu), group = sim) +
geom_line() +
facet_grid(mu ~ R0, scales = "free", labeller = label_both) +
xlab("time(days)") +
ylab("n infected individuals") +
theme_bw(base_size = 14) +
theme(legend.position = "none") +
scale_x_continuous(breaks = c(0, 50, 100))
library(tidyverse)
SA2_files <- list.files("../../../data/sims/SA2", full.names = TRUE) %>% head(-1)
SA2_tot_files <- SA2_files[!str_detect(SA2_files, "patchinf|patchsus|summary")]
SA2_sims <- read_csv(SA2_tot_files, col_names = c("t", "S", "I"), skip = 2, id = "sim")
SA2_sims <- SA2_sims |>
mutate(
beta = as.numeric(str_extract(sim, "(...)_.{3}_.{3}_.{1,3}.csv", group = 1)),
gamma = as.numeric(str_extract(sim, "(...)_.{3}_.{1,3}.csv", group = 1)),
mu = as.numeric(str_extract(sim, "(...)_.{1,3}.csv", group = 1)),
R0 = beta/gamma,
SA = 2)
SA2_sims |>
ggplot() +
aes(x = t, y = I, col = factor(mu), group = sim) +
geom_line() +
facet_grid(mu ~ R0, scales = "free", labeller = label_both) +
xlab("time(days)") +
ylab("n infected individuals") +
theme_bw(base_size = 14) +
theme(legend.position = "none") +
scale_x_continuous(breaks = c(0, 50, 100))
SA3_files <- list.files("../../../data/sims/SA3", full.names = TRUE)
SA3_tot_files <- SA3_files[!str_detect(SA3_files, "patchinf|patchsus|summary")]
SA3_sims <- read_csv(SA3_tot_files, col_names = c("t", "S", "I"), skip = 2, id = "sim")
SA3_sims <- SA3_sims |>
mutate(
beta = as.numeric(str_extract(sim, "(...)_.{3}_.{3}_.{1,3}.csv", group = 1)),
gamma = as.numeric(str_extract(sim, "(...)_.{3}_.{1,3}.csv", group = 1)),
mu = as.numeric(str_extract(sim, "(...)_.{1,3}.csv", group = 1)),
R0 = beta/gamma,
SA = 3)
SA3_sims |>
ggplot() +
aes(x = t, y = I, col = mu, group = sim) +
geom_line() +
facet_wrap(~R0, scales = "free")
SA4_files <- list.files("../../../data/sims/SA4", full.names = TRUE)
SA4_tot_files <- SA4_files[!str_detect(SA4_files, "patchinf|patchsus|summary")]
SA4_sims <- read_csv(SA4_tot_files, col_names = c("t", "S", "I"), skip = 2, id = "sim")
SA4_sims <- SA4_sims |>
mutate(
beta = as.numeric(str_extract(sim, "(...)_.{3}_.{3}_.{1,3}.csv", group = 1)),
gamma = as.numeric(str_extract(sim, "(...)_.{3}_.{1,3}.csv", group = 1)),
mu = as.numeric(str_extract(sim, "(...)_.{1,3}.csv", group = 1)),
R0 = beta/gamma,
SA = 4)
SA4_sims |>
ggplot() +
aes(x = t, y = I, col = mu, group = sim) +
geom_line() +
facet_wrap(~R0, scales = "free")
Moss_files <- list.files("../../../data/sims/Moss", full.names = TRUE)
Moss_tot_files <- Moss_files[!str_detect(Moss_files, "patchinf|patchsus|summary")]
Moss_sims <- read_csv(Moss_tot_files, col_names = c("t", "S", "I"), skip = 2, id = "sim")
Moss_sims <- Moss_sims |>
mutate(
beta = as.numeric(str_extract(sim, "(...)_.{3}_.{1,2}_.{1,3}.csv", group = 1)),
gamma = as.numeric(str_extract(sim, "(...)_.{1,2}_.{1,3}.csv", group = 1)),
R0 = beta/gamma,
SA = 3,
mu = "Moss",
mossparam = as.numeric(str_extract(sim, "_(.{1,2})_.{1,3}.csv", group = 1)) ) |>
filter(mossparam == 5) |>
select(-mossparam)
rbind(SA2_sims,
SA3_sims,
SA4_sims
) |>
filter(R0 <= 2) |>
ggplot() +
aes(x = t, y = I, col = mu, group = sim) +
geom_line() +
facet_grid(SA ~ R0, scales = "free")
rbind(SA2_sims,
SA3_sims,
SA4_sims,
Moss_sims
) |>
group_by(sim, SA, R0, mu) |>
summarise(fin = min(S)) |>
ggplot() +
aes(x = mu, y = fin, col = factor(SA)) +
geom_point(size = 0.5) +
facet_grid( ~ R0, scales = "free")
rbind(SA2_sims,
SA3_sims,
SA4_sims
) |>
group_by(sim, SA, R0, mu) |>
summarise(fin = min(S)) |>
ggplot() +
aes(x = mu, y = fin, col = factor(SA)) +
geom_point(size = 0.5) +
facet_grid( ~ R0, scales = "free")
SA2_files <- list.files("../../../data/sims/SA2", full.names = TRUE, recursive = TRUE)
SA2_tot_files <- SA2_files[!str_detect(SA2_files, "patchinf|patchsus|summary")]
SA2_sims <- read_csv(SA2_tot_files, col_names = c("t", "S", "I"), skip = 2, id = "sim")
SA2_sims <- SA2_sims |>
mutate(
beta = as.numeric(str_extract(sim, "(...)_.{3}_.{3}_.{1,3}.csv", group = 1)),
gamma = as.numeric(str_extract(sim, "(...)_.{3}_.{1,3}.csv", group = 1)),
mu = as.numeric(str_extract(sim, "(...)_.{1,3}.csv", group = 1)),
R0 = beta/gamma,
SA = 2)
SA2_sims |>
ggplot() +
aes(x = t, y = I, col = factor(mu), group = sim) +
geom_line() +
facet_grid(mu ~ R0, scales = "free", labeller = label_both) +
xlab("time(days)") +
ylab("n infected individuals") +
theme_bw(base_size = 14) +
theme(legend.position = "none") +
scale_x_continuous(breaks = c(0, 50, 100))
sims_dirs <- list.dirs("./data/sims")
list.dirs("./data/sims")
list.dirs("../data/sims")
list.dirs("../../../data/sims")
list.dirs("../../../")
list.dirs("../../")
list.dirs(".")
list.dirs("../../")
list.dirs("../../", recursive = FALSE)
list.dirs("../../data/sims", recursive = FALSE)
list.dirs("../../data/sims")
sim_dirs <- list.dirs("../../data/sims", recursive = TRUE)
sim_dirs
sim_dirs <- list.files("../../data/sims", recursive = TRUE)
length(sim_dirs)
sim_dirs[1]
sim_dirs <- list.files("../../data/sims", recursive = TRUE)
tot_dirs <- sim_dirs[!str_detect(SA2_files, "patchinf|patchsus|summary")]
library(tidyverse)
tot_dirs <- sim_dirs[!str_detect(SA2_files, "patchinf|patchsus|summary")]
tot_dirs <- sim_dirs[!str_detect(sim_dirs, "patchinf|patchsus|summary")]
sims <- read_csv(tot_dirs, col_names = c("t", "S", "I"), skip = 2, id = "sim")
tot_dirs
paste0("../../data/sims", tot_dirs)
tot_dirs <- sim_dirs[!str_detect(sim_dirs, "patchinf|patchsus|summary")] %>%
paste0("../../data/sims", .)
tot_dirs
sims <- read_csv(tot_dirs, col_names = c("t", "S", "I"), skip = 2, id = "sim")
tot_dirs <- sim_dirs[!str_detect(sim_dirs, "patchinf|patchsus|summary")] %>%
paste0("../../data/sims/", .)
sims <- read_csv(tot_dirs, col_names = c("t", "S", "I"), skip = 2, id = "sim")
sims <- read_csv(tot_dirs, skip = 2, id = "sim")
sims <- read_csv(tot_dirs, id = "sim")
tot_dirs[4218]
sim_dirs <- list.files("../../data/sims", recursive = TRUE)
sim_dirs <- list.files("../../data/sims", recursive = TRUE)
tot_dirs <- sim_dirs[!str_detect(sim_dirs, "patchinf|patchsus|summary")] %>%
paste0("../../data/sims/", .)
tot_dirs <- sim_dirs[!str_detect(sim_dirs, "patchinf|patchsus|summary")] %>%
paste0("../../data/sims/", .)
sims <- read_csv(tot_dirs, id = "sim")
View(sims)
sims <- read_csv(tot_dirs, col_names = c("t", "S", "I"), skip = 2, id = "sim")
sims <- read_csv(tot_dirs, skip = 2, id = "sim")
sims <- read_csv(tot_dirs, col_names = c("t", "S", "I"), skip = 2, id = "sim")
tot_dirs[5522]
sims <- read_csv(tot_dirs, col_names = c("t", "S", "I"), id = "sim",  )
sims
sims <- read_csv(tot_dirs, col_names = c("t", "S", "I"), skip = 1, id = "sim",  )
sims
sims <- sims |>
filter(t == "Int64")
sims
sims <- sims |>
filter(t != "Int64")
sims
sims <- read_csv(tot_dirs, col_names = c("t", "S", "I"), skip = 1, id = "sim" )
sims %>%
filter(t !="Int64")
