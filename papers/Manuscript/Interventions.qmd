---
title: "Mixing Matrix Interventions"
editor: visual
---

```{r}
library(tidyverse)
library(glue)
library(sf)
library(RColorBrewer)
```

## Motivation

-   Reduce the total epidemic size/effects by intervening in strategic locations

-   Spatial resolution allows for precise targeting. Behavioural intervention (restriction of mixing) Mixing matrix is modified during simulation

## Formulation

-   Parameters

    -   Trigger: condition at which intervention occurs

    -   Effect:

        -   `local` reduce the intra-patch mixing

        -   `travel` reduce inter-patch mixing

        -   `total` reduce intra- and inter-patch mixing

## Implimentation

### local intervention

## Simulation

```{r, eval=TRUE }
Intervention_Sim_dirs <- list.files("../../data/sims/", pattern = ".*_(none|local|travel|total)_[1-5].csv", recursive = TRUE)

tot_dirs <- Intervention_Sim_dirs[!str_detect(Intervention_Sim_dirs, "patchinf|patchsus")] %>%
  paste0("../../data/sims/", .)

sims <- read_csv(tot_dirs, id = "sim", col_names = c("t", "S", "I"), skip = 1)

sims <-  sims |>
  filter(t != "Int64", grepl("HPMM", sim)) %>%
  mutate(
    I = as.numeric(I),
    t = as.numeric(t),
    SA = str_extract(sim, "SA./SA(.)", 1),
    Mixmat = str_extract(sim, "SA./SA._..._..._(HPMM|HMM|OD)_", 1),
    mu = str_extract(sim, "SA./SA._..._..._.{3,4}_(.{0,3})_", 1),
    Intervention = factor(str_extract(sim,"SA./SA._..._..._.{3,4}_.{0,3}_(none|local|travel|total)", 1)),
    beta = as.numeric(str_extract(sim, "SA./SA._(...)", group = 1)),
    gamma = as.numeric(str_extract(sim, "SA./SA._..._(...)", group = 1)),
    R0 = beta/gamma,
    sim_num = str_extract(sim, "_(.{1,3}).csv", 1))
```

```{r, eval=TRUE}
Gmelb_pop <- 4976157
SAcols <- brewer.pal(4, "Dark2")

sims_summary <- sims %>% 
  group_by(SA, Intervention, Mixmat, mu, R0, sim_num) %>% 
  summarise(peaksize = max(I)/Gmelb_pop,
            finalsize = (Gmelb_pop - min(S))/Gmelb_pop,
            duration = max(t),
            peaktime = t[which(I == max(I))]) %>% 
  ungroup() %>%
  group_by(SA, Mixmat, mu, R0, Intervention) %>%
  summarise(peaksize = mean(peaksize),
            finalsize = mean(finalsize),
            duration = mean(duration),
            peaktime = mean(peaktime))

sims_summary %>%
  filter(R0 >= 1.8, SA == 4 | SA == 3) %>% 
  ggplot() +
  aes(x = R0, y = finalsize, color = SA) +
  geom_line() +
  scale_colour_manual(values = c("2" = SAcols[1], "3" = SAcols[2], "4" = SAcols[3])) +
  facet_grid(mu~Intervention)
```

```{r, eval=TRUE}
#| label: fig-SA3_OD_outcomes
#| fig-cap: Final (a) and peak (b) infection numbers (as a proportion of the entire population), peak time (c) and total duration (d) of a simulated SIR metapopulation model with OD mixing matrix at different values of $\delta^H$ and $R_0$
#| fig-subcap: 
#|   - ""
#|   - ""
#|   - ""
#|   - ""
#| layout-ncol: 2
sims_summary %>%
  ggplot() +
  aes(x = mu, y = R0) +
  geom_point(aes(col = finalsize), size = 5) +
  facet_grid(Mixmat~SA) 


sims_summary %>%
  filter( R0 <= 2) %>%
  ggplot() +
  aes(y = R0, x = mu) +
  geom_point(aes(col = peaksize), size = 5) 

sims_summary %>%
  filter( R0 <= 2) %>%
  ggplot() +
  aes(x = mu, y = R0) +
  geom_point(aes(col = log(peaktime)), size = 5) 

sims_summary %>%
  filter(R0 <= 2) %>%
  ggplot() +
  aes(x =mu, y = R0) +
  geom_point(aes(col = log(duration)), size = 5)
```

However, now we can decompose these metapopulation scale outcomes into those of the underlying subpopulation. For example, @fig-OD_patchinf_curve_eg


